#!/usr/bin/perl

##
# The Loop agent:
#   - transmits messages back & forth to & from another loop agent.
#   - recognized arguments:
#	tell	=> 'ip.address:port' (of remote agent. optional)
#	verbose	=> 1                 (optional)
#   - Steve Purkis <spurkis@engsoc.carleton.ca>, Jan 18, 1998.
##

package Agent::Loop;
use Agent;
@ISA = qw( Agent );

sub new {
	my ($class, %args) = @_;

        my $self = {};
	foreach (keys(%args)) {
		$self->{"$_"} = $args{"$_"};
	}
	bless $self, $class;
}

sub agent_main {
	my ($self, @args) = @_;
	my $msg = new Agent::Message( Body => 'hi' );

	# should we start the loop, or wait for the remote to start?
	if ($self->{tell}) {
		$msg->to($self->{tell});
		$self->hi($msg);
	}
	while (1) {
		$msg->to($self->gethi);
		$self->hi($msg);
	}
}

sub hi {
	my ($self, $msg) = @_;
	print "Saying hi to ", $msg->to, "...\n" if $self->{verbose};
	$self->Tell( $msg );
}

sub gethi {
	my $self = shift;
	my $msg;
	while (!($msg = $self->Listen)) { print "." if $self->{verbose}; }
	my ($who, $from) = $msg->from;
	print "Message recieved from $from\n" if $self->{verbose};
	return $from;
}

1;
